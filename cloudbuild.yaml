# To build and deploy to Cloud Run, run from this directory:
# $ gcloud builds submit app --config=cloudbuild.yaml 
steps:
  # Build app
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '.', '-t', '${_IMAGE_PATH}:${COMMIT_SHA}', '-t', '${_IMAGE_PATH}','-f', 'Dockerfile']
    dir: 'app'  
    id: build
  # Run unit tests
  - name: ${_IMAGE_PATH}
    entrypoint: python
    args: ["-m","pytest","unit_tests.py"]
    dir: 'app'
    id: test
  # Verify code with sonarqube - Quality gate
  - name: 'gcr.io/$PROJECT_ID/sonar-scanner:latest'
    entrypoint: 'bash'
    args:
    - -c
    - /launch.sh -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$$SONAR_TOKEN -Dsonar.projectKey=$$SONAR_PROJECT_KEY -Dsonar.organization=$$SONAR_ORG -Dsonar.sources=./app -Dsonar.qualitygate.wait=false
    secretEnv: ['SONAR_TOKEN','SONAR_ORG','SONAR_PROJECT_KEY']
    id: static-code-analysis    
  # Push docker image and save image digest for kritis check
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_IMAGE_PATH}:${COMMIT_SHA}']
    id: push
  # Check vulnerabilities
  - name: 'us-central1-docker.pkg.dev/$PROJECT_ID/cloudbuild-helpers/attestor'
    id: vulnz-scan
    entrypoint: 'sh'
    args:
    - -xe
    - -c
    - |
        /scripts/check_vulnerabilities.sh -p ${PROJECT_ID} -i ${_IMAGE_PATH}:${COMMIT_SHA} -t 7
  # Create attestation
  - name: 'us-central1-docker.pkg.dev/$PROJECT_ID/cloudbuild-helpers/attestor'
    id: 'attest-vulnz-scan'
    entrypoint: 'sh'
    args:
    - -xe
    - -c
    - |-
        FQ_DIGEST=$(gcloud container images describe --format 'value(image_summary.fully_qualified_digest)' ${_IMAGE_PATH}:$COMMIT_SHA)
        /scripts/create_attestation.sh \
          -p "$PROJECT_ID" \
          -i "$${FQ_DIGEST}" \
          -a "$_VULNZ_ATTESTOR" \
          -v "$_VULNZ_KMS_KEY_VERSION" \
          -k "$_VULNZ_KMS_KEY" \
          -l "$_KMS_LOCATION" \
          -r "$_KMS_KEYRING"
  # Create release in Google Cloud Deploy
  - name: 'gcr.io/cloud-builders/gcloud'
    id: create-release
    entrypoint: /bin/sh
    args:
    - '-c'
    - |-
      DIGEST=$(gcloud container images describe --format 'value(image_summary.digest)' ${_IMAGE_PATH}:$COMMIT_SHA)
      gcloud deploy releases create rel-${SHORT_SHA} \
        --delivery-pipeline "hello-world-python-pipeline" \
        --region "asia-east1" \
        --annotations "commitId=${REVISION_ID}" \
        --images hello-world-python=${_IMAGE_PATH}@$${DIGEST}
images:
  - $_IMAGE_PATH:$COMMIT_SHA
substitutions:
  _IMAGE_PATH: 'us-central1-docker.pkg.dev/${PROJECT_ID}/hello-world-python/hello-world-python'
availableSecrets:
  secretManager:
  - versionName: projects/${PROJECT_ID}/secrets/SONAR_TOKEN/versions/latest
    env: 'SONAR_TOKEN'
  - versionName: projects/${PROJECT_ID}/secrets/SONAR_ORG/versions/latest
    env: 'SONAR_ORG'
  - versionName: projects/${PROJECT_ID}/secrets/SONAR_PROJECT_KEY/versions/latest
    env: 'SONAR_PROJECT_KEY'
options:
  requestedVerifyOption: VERIFIED